version: '3.9'
services:
  testy:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    build:
      context: testy
      dockerfile: scripts/dev/Dockerfile
    volumes:
      - './:/testy'
    ports:
      - "8001:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=testy.settings.development
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVICE_HOST=${POSTGRES_SERVICE_HOST}
      - POSTGRES_SERVICE_PORT=${POSTGRES_SERVICE_PORT}
      - COMPANY_DOMAIN=${COMPANY_DOMAIN}
      - SUPERUSER_USERNAME=${SUPERUSER_USERNAME}
      - SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=redis://host.docker.internal:6379
      - CELERY_RESULT_BACKEND=redis://host.docker.internal:6379
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.5-alpine
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    container_name: redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "6379:6379"
  celery:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    network_mode: "host"
    restart: always
    build:
      context: testy
      dockerfile: scripts/celery/Dockerfile
    command: celery -A testy worker -l INFO
    container_name: celery
    environment:
      - DJANGO_SETTINGS_MODULE=testy.settings.development
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVICE_HOST=localhost
      - POSTGRES_SERVICE_PORT=5435
      - COMPANY_DOMAIN=${COMPANY_DOMAIN}
      - SUPERUSER_USERNAME=${SUPERUSER_USERNAME}
      - SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=redis://host.docker.internal:6379
      - CELERY_RESULT_BACKEND=redis://host.docker.internal:6379
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
    volumes:
      - './testy:/testy'
    depends_on:
      - testy
      - db
      - redis

volumes:
  react_apps: