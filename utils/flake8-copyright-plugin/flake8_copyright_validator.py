import difflib

import importlib_metadata


class CopyrightValidator(object):
    name = __name__
    version = importlib_metadata.version(__name__)
    extensions = None
    copyright_text_list = None
    custom_escape_sequences = None
    detailed_output = False
    update = False
    copyright_text = None

    def __init__(self, tree, filename) -> None:
        self._tree = tree
        self._filename = filename

    @classmethod
    def add_options(cls, parser):
        parser.add_option(
            '--copyright-text',
            help='a text to look for in files',
            parse_from_config=True,
        )
        parser.add_option(
            '--update',
            help='defines if files should be updated with provided copyright text',
            action='store_true'
        )
        parser.add_option(
            '--detailed-output',
            help='provides detailed output',
            action='store_true'
        )
        parser.add_option(
            '--custom-escape-sequences',
            comma_separated_list=True,
            help='custom escape sequences',
            parse_from_config=True,
        )

        parser.add_option(
            '--extensions',
            comma_separated_list=True,
            help='check files with only these extensions',
            parse_from_config=True,
        )

    @classmethod
    def parse_options(cls, options):
        cls.extensions = options.extensions
        cls.detailed_output = options.detailed_output
        cls.update = options.update

        cls.custom_escape_sequences = [custom_seq.split('|') for custom_seq in options.custom_escape_sequences]

        formatted_text = options.copyright_text

        for escape_seq in cls.custom_escape_sequences:
            formatted_text = formatted_text.replace(escape_seq[0], escape_seq[1])

        cls.copyright_text_list = [elem for elem in formatted_text.split('\n') if elem]

        cls.copyright_text = '\n'.join(cls.copyright_text_list)

        print(cls.copyright_text_list)

    def run(self):
        lisense_lines = self.copyright_text_list
        diff = None
        if not self.is_ext_valid(self._filename):
            return
        with open(self._filename, 'r+') as w:
            print(self._filename)
            content = w.read()
            lines = content.split('\n')
            if not lines:
                return
            if lines[0].startswith('# Generated by Django'):
                return
            if lines[0].startswith('#!'):
                return
            if lines[0:len(lisense_lines)] != lisense_lines:
                diff = '\n'.join([line for line in difflib.unified_diff(lisense_lines, lines[0:len(lisense_lines)])])
                err_msg = f'NCF100 No copyright found\n{diff if self.detailed_output else ""}'
                yield 1, 0, err_msg, type(self)
            if self.update and diff:
                content = self.copyright_text + '\n' + content
                w.seek(0)
                w.write(content)

    def is_ext_valid(self, name: str) -> bool:
        """
        Check the file extension and return True if the given file should have a license
        """
        parts = name.split('.')
        if parts[-1] in self.extensions:
            return True
        return False
